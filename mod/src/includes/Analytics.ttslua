function ga_track(data)
  local url = "https://www.google-analytics.com/collect"
  local payload = {
    v   = "1",
    tid = "UA-192712398-2",
    cid = _G.CCID,
    uid = _G.UUID,
  }
  local function charToHex(c)
    return string.format("%%%02X", string.byte(c))
  end
  local function urlEncode(url)
    url = url:gsub("\n", "\r\n")
    url = url:gsub("([^%w ])", charToHex)
    url = url:gsub(" ", "+")
    return url
  end
  local out = ""
  for k, v in pairs(payload) do
    if v ~= nil then
      out = out .. tostring(k) .. "=" .. tostring(v) .. "&"
    end
  end
  for k, v in pairs(data) do
    if v ~= nil then
      out = out .. urlEncode(tostring(k)) .. "=" .. urlEncode(tostring(v)) .. "&"
    end
  end
  print(out)
  WebRequest.post(url, out, function(e)
    print(e.response_code)
    -- print(e.error)
  end)
end

function ga_event(category, action, label, value)
  local data = {
    t   = "event",
    ec  = category,
    ea  = action,
  }
  if label ~= nil then
    data["el"] = label
    if value ~=nil then
      data["ev"] = value
    end
  end
  ga_track({
    t   = "event",
    ec  = category,
    ea  = action,
    ev  = value,
  })
end

function ga_view(screen)
  ga_track({
    t   = "pageview",
    dp  = screen,
  })
end

function ga_timing(category, variable, time, label)
  ga_track({
    t   = "timing",
    utc = category,
    utv = variable,
    utt = time,
    utl = label,
  })
end

function ga_exception(description, is_fatal)
  if is_fatal == true then
    is_fatal = 1
  else
    is_fatal = 0
  end
  ga_track({
    t   = "exception",
    exd = description,
    exf = is_fatal,
  })
end
